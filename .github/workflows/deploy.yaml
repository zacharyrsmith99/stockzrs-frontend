name: Deploy to Production

on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GHA_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.2'

    - name: Update kube config
      run: aws eks update-kubeconfig --name eks --region $AWS_REGION

    - name: Deploy to EKS
      run: |
        sed -i 's|image: .*|image: '"${{ env.image }}"'|' k8s/stockzrs-frontend-deployment.yml
        kubectl apply -f k8s/stockzrs-frontend-deployment.yml -n stockzrs-frontend
        kubectl rollout restart deployment/stockzrs-frontend -n stockzrs-frontend